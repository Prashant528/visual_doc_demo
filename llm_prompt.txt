[{'role': 'system', 'content': 'You are a helpful assistant. You are knowledgeable on Open Source Communities and Projects, onboarding processes and JSON. You do not explain things. You are an API endpoint and just give the JSON response that has been asked for.'}, {'role': 'user', 'content': '\n                    I have a Python list, and each element represents a step in contributing to an open source project. Please review the list to ensure each element resembles a valid task in this process. If any elements are unclear, too brief, or need improvement, \n                      feel free to merge elements, remove unnecessary parts, and create a revised list that accurately reflects meaningful contribution steps.\n                \n                    Second, I want you to create the following two JSONs from the new list:\n                    1. JSON name = "content". \n                    Description: For each element in the list, I want to map the topic of the element to the content of the element. Please add markdown syntax to better format the content and also add <br /> for indicating newlines. \n                    Extract one topic from the content. \n                    This json would be named "content" and an example looks like: \n                    { "Topic 1": "content 1", "Topic 2": "content 2", "Topic 3": "content 3"}.\n                    2. JSON name = "flow".\n                    Description: For all the elements in the list, \n                    I want to find the sequence that a person contributing to that project would follow in a practical scenario. \n                    If each element in the list was a node in a graph, \n                    I want a JSON that gives me a source node and the target node for each edge in the graph. \n                    The format of the JSON should look like { "edges": [ {"source": "Topic 1", "target": "Topic 2"}, {"source": "Topic 2", "target": "Topic 3"} ] }. \n                    Finally, merge the two JSONs into a single one that looks like: {"content": "...", "flow":"..."}. Please provide a valid JSON output with double quotes around keys and values.\n                    If there is only one node, add a single edge with both source and target as the same node.\n\n                    This is the list of action steps:\n\n                    [\' Code of Conduct The Node.js project has a [Code of Conduct](https://github.com/nodejs/admin/blob/HEAD/CODE_OF_CONDUCT.md) that all contributors are expected to follow. This code describes the minimum behavior expectations for all contributors. As a contributor to Node.js, how you choose to act and interact towards your fellow contributors, as well as to the community, will reflect back not only on yourself but on the project as a whole. The Code of Conduct is designed and intended, above all else, to help establish a culture within the project that allows anyone and everyone who wants to contribute to feel safe doing so. Should any individual act in any way that is considered in violation of the [Code of Conduct](https://github.com/nodejs/admin/blob/HEAD/CODE_OF_CONDUCT.md), corrective actions will be taken. It is possible, however, for any individual to act in such a manner that is not in violation of the strict letter of the Code of Conduct guidelines while still going completely against the spirit of what that Code is intended to accomplish. Open, diverse, and inclusive communities live and die on the basis of trust. Contributors can disagree with one another so long as they trust that those disagreements are in good faith and everyone is working towards a common goal.\', \' Bad actors All contributors to Node.js tacitly agree to abide by both the letter and spirit of the [Code of Conduct](https://github.com/nodejs/admin/blob/HEAD/CODE_OF_CONDUCT.md). Failure, or unwillingness, to do so will result in contributions being respectfully declined. A bad actor is someone who repeatedly violates the spirit of the Code of Conduct through failure to regulate how they interact with others. In doing so, bad actors alienate other contributors, discourage collaboration, and generally reflect poorly on the project as a whole. Being a bad actor may be intentional or unintentional. Typically, unintentional bad behavior can be easily corrected by being quick to apologize and correct course even if you are not entirely convinced you need to. Giving other contributors the benefit of the doubt and having a sincere willingness to admit that you might be wrong is critical for any successful open collaboration.\', " Don\'t be a bad actor."]'}]