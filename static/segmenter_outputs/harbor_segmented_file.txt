Contributing to Harbor
 
 Welcome
 
 Harbor is developed in the open, and is constantly being improved by our users, contributors, and maintainers.
It is because of you that we can bring great software to the community.
This guide provides information on filing issues and guidelines for open source contributors.
Please leave comments / suggestions if you find something is missing or incorrect.
Contributors are encouraged to collaborate using the following resources in addition to the GitHub issue tracker:
 
   - Bi-weekly public community meetings
       - Catch up with past meetings on YouTube
   - Chat with us on the CNCF Slack (get an invitation here )
       - #harbor for end-user discussions
       - #harbor-dev for development of Harbor
   - Want long-form communication instead of Slack?
We have two distributions lists:
       - harbor-users for end-user discussions
       - harbor-dev for development of Harbor
 
 Follow us on Twitter at @project_harbor
 
 Getting Started
 
 Fork Repository
 
 Fork the Harbor repository on GitHub to your personal account.
#Set golang environment
 export GOPATH=$HOME/go
 mkdir -p $GOPATH/src/github.com/goharbor
 
 #Get code
 git clone git@github.com:goharbor/harbor.git
 cd $GOPATH/src/github.com/goharbor/harbor
 
 #Track repository under your personal account
 git config push.default nothing # Anything to avoid pushing to goharbor/harbor by default
 git remote rename origin goharbor
 git remote add $USER git@github.com:$USER/harbor.git
 git fetch $USER
 
 NOTES: Note that GOPATH can be any directory, the example above uses $HOME/go.
Change $USER above to your own GitHub username.
Build Project
 
 To build the project, please refer the build guideline.


-----------------------------<PREDICTEDSEGMENT>--------------------------

Repository Structure
 
 Here is the basic structure of the harbor code base.
Some key folders / files are commented for your references.
.
...
 ├── contrib       # Contain documents, scripts, and other helpful things which are contributed by the community
 ├── make          # Resource for building and setting up Harbor environment
 ...
 ├── src           # Source code folder
 ├── tests         # Test cases for API / e2e testings
 └── tools         # Keep supporting tools
 ...
The folder graph below shows the structure of the source code folder harbor/src, which will be your primary working directory.
The key folders are also commented.
.
├── chartserver         # Source code contains the main logic to handle chart.
├── cmd                 # Source code contains migrate script to handle DB upgrade.

